; generated by Component: ARM Compiler 5.04 update 1 (build 49) Tool: ArmCC [5040049]
; commandline ArmCC [--c99 --list --debug -c --asm --interleave -o..\obj\string.o --asm_dir=.\ --list_dir=.\ --depend=..\obj\string.d --cpu=Cortex-M3 --apcs=interwork -O3 -Otime -I..\CORE -I..\STM32F10x_FWLIB\inc -I..\USER -I..\SYSTEM\delay -I..\SYSTEM\sys -I..\SYSTEM\usart -I..\C++LIB\OnChip\GPIO -I..\C++LIB\ToolBox\Buffer -I..\C++LIB\System -I..\C++LIB\OnChip\IIC -I..\C++LIB\OffChip -I..\C++LIB\System\TaskManager -I..\C++LIB\System\Interrupt -I..\C++LIB\OnChip\SerialPort -ID:\Keil_v5\ARM\RV31\INC -ID:\Keil_v5\ARM\PACK\ARM\CMSIS\4.1.0\CMSIS\Include -ID:\Keil_v5\ARM\PACK\Keil\STM32F1xx_DFP\2.1.0 -DSTM32F10X_MD -DSTM32F10X_MD -DUSE_STDPERIPH_DRIVER -W --omf_browse=..\obj\string.crf String.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  Strlen PROC
;;;21     #endif//__STRING_H__
;;;2      Size_t Strlen(U8* s1)
000000  f8102b01          LDRB     r2,[r0],#1
;;;3      {
;;;4      	Size_t temp=0;
000004  2100              MOVS     r1,#0
000006  b122              CBZ      r2,|L1.18|
                  |L1.8|
;;;5      	while(*s1++)
;;;6      		temp++;
000008  f8102b01          LDRB     r2,[r0],#1
00000c  1c49              ADDS     r1,r1,#1
00000e  2a00              CMP      r2,#0
000010  d1fa              BNE      |L1.8|
                  |L1.18|
;;;7      	return temp;
000012  4608              MOV      r0,r1
;;;8      }
000014  4770              BX       lr
;;;9      U8* Strcpy(U8* s1,U8* s2)
                          ENDP

                  Strcpy PROC
000016  4603              MOV      r3,r0
                  |L1.24|
;;;10     {
;;;11     	U8* bak=s1;
;;;12     	while((*s1++)=(*s2++));
000018  f8112b01          LDRB     r2,[r1],#1
00001c  f8002b01          STRB     r2,[r0],#1
000020  2a00              CMP      r2,#0
000022  d1f9              BNE      |L1.24|
;;;13     	return bak;
000024  4618              MOV      r0,r3
;;;14     }
000026  4770              BX       lr
;;;15     U8* Strcat(U8* s1,U8* s2)
                          ENDP

                  Strcat PROC
000028  7803              LDRB     r3,[r0,#0]
;;;16     {
;;;17     	U8* bak=s1;
00002a  4602              MOV      r2,r0
00002c  b123              CBZ      r3,|L1.56|
;;;18     	while(*s1)
;;;19     		s1++;
00002e  bf00              NOP      
                  |L1.48|
000030  f8103f01          LDRB     r3,[r0,#1]!
000034  2b00              CMP      r3,#0
000036  d1fb              BNE      |L1.48|
                  |L1.56|
000038  f8113b01          LDRB     r3,[r1],#1
00003c  f8003b01          STRB     r3,[r0],#1
000040  2b00              CMP      r3,#0
000042  d1f9              BNE      |L1.56|
;;;20     	Strcpy(s1,s2);
;;;21     	return bak;
000044  4610              MOV      r0,r2
;;;22     }
000046  4770              BX       lr
;;;23     I8 Strcmp(U8* s1,U8* s2)
                          ENDP

                  Strcmp PROC
000048  7802              LDRB     r2,[r0,#0]
;;;24     {
;;;25     	while(*s1==*s2)
00004a  780b              LDRB     r3,[r1,#0]
00004c  429a              CMP      r2,r3
00004e  d108              BNE      |L1.98|
                  |L1.80|
;;;26     	{
;;;27     		if(*s1=='\0')
000050  f0120fff          TST      r2,#0xff
000054  d00e              BEQ      |L1.116|
;;;28     			return 0;
;;;29     		s1++;
;;;30     		s2++;
000056  f8102f01          LDRB     r2,[r0,#1]!
00005a  f8113f01          LDRB     r3,[r1,#1]!
00005e  429a              CMP      r2,r3
000060  d0f6              BEQ      |L1.80|
                  |L1.98|
;;;31     	}
;;;32     	return (*s1>*s2)?1:-1;
000062  0610              LSLS     r0,r2,#24
000064  ebb06f03          CMP      r0,r3,LSL #24
000068  bf8c              ITE      HI
00006a  2001              MOVHI    r0,#1
00006c  f04f30ff          MOVLS    r0,#0xffffffff
000070  b2c0              UXTB     r0,r0
;;;33     }
000072  4770              BX       lr
                  |L1.116|
000074  2000              MOVS     r0,#0                 ;28
000076  4770              BX       lr
;;;34     U8* Strchr(U8* s1,U8 c1)
                          ENDP

                  Strchr PROC
000078  7802              LDRB     r2,[r0,#0]
;;;35     {
00007a  b13a              CBZ      r2,|L1.140|
                  |L1.124|
;;;36     	while(*s1)
;;;37     	{
;;;38     		if(*s1==c1)
00007c  b2d2              UXTB     r2,r2
00007e  428a              CMP      r2,r1
;;;39     			return s1;
;;;40     		else
;;;41     			s1++;
;;;42     	}
;;;43     	return (U8*)0;
;;;44     }
000080  bf08              IT       EQ
000082  4770              BXEQ     lr
000084  f8102f01          LDRB     r2,[r0,#1]!           ;41
000088  2a00              CMP      r2,#0                 ;41
00008a  d1f7              BNE      |L1.124|
                  |L1.140|
00008c  2000              MOVS     r0,#0                 ;43
00008e  4770              BX       lr
;;;45     U8* Strstr(U8* s1,U8* s2)
                          ENDP

                  Strstr PROC
000090  b430              PUSH     {r4,r5}
000092  f890c000          LDRB     r12,[r0,#0]
000096  2300              MOVS     r3,#0
000098  1c42              ADDS     r2,r0,#1
00009a  f1bc0f00          CMP      r12,#0
;;;46     {
00009e  d005              BEQ      |L1.172|
                  |L1.160|
0000a0  f812cb01          LDRB     r12,[r2],#1
0000a4  1c5b              ADDS     r3,r3,#1
0000a6  f1bc0f00          CMP      r12,#0
0000aa  d1f9              BNE      |L1.160|
                  |L1.172|
0000ac  780c              LDRB     r4,[r1,#0]
0000ae  f04f0c00          MOV      r12,#0
0000b2  1c4a              ADDS     r2,r1,#1
0000b4  b134              CBZ      r4,|L1.196|
0000b6  bf00              NOP      
                  |L1.184|
0000b8  f8125b01          LDRB     r5,[r2],#1
0000bc  f10c0c01          ADD      r12,r12,#1
0000c0  2d00              CMP      r5,#0
0000c2  d1f9              BNE      |L1.184|
                  |L1.196|
;;;47     	Size_t n=(Strlen(s1)-Strlen(s2)+1);
0000c4  eba3020c          SUB      r2,r3,r12
0000c8  1c53              ADDS     r3,r2,#1
;;;48     	for(Size_t i=0;i<n;i++)
0000ca  f04f0200          MOV      r2,#0
0000ce  d015              BEQ      |L1.252|
                  |L1.208|
;;;49     	{
;;;50     		if(*(s1+i)==*s2)
0000d0  f810c002          LDRB     r12,[r0,r2]
0000d4  45a4              CMP      r12,r4
0000d6  d10e              BNE      |L1.246|
;;;51     		{
;;;52     			if(Strcmp(s1+i,s2)>=0)
0000d8  4410              ADD      r0,r0,r2
0000da  4602              MOV      r2,r0
                  |L1.220|
0000dc  7813              LDRB     r3,[r2,#0]
0000de  2b00              CMP      r3,#0
;;;53     				return s1+i;
;;;54     		}
;;;55     	}
;;;56     	return (U8*)0;
;;;57     }
0000e0  bf04              ITT      EQ
0000e2  bc30              POPEQ    {r4,r5}
0000e4  4770              BXEQ     lr
0000e6  f8123f01          LDRB     r3,[r2,#1]!
0000ea  f811cf01          LDRB     r12,[r1,#1]!
0000ee  4563              CMP      r3,r12
0000f0  d0f4              BEQ      |L1.220|
0000f2  bc30              POP      {r4,r5}
0000f4  4770              BX       lr
                  |L1.246|
0000f6  1c52              ADDS     r2,r2,#1
0000f8  429a              CMP      r2,r3                 ;53
0000fa  d3e9              BCC      |L1.208|
                  |L1.252|
0000fc  bc30              POP      {r4,r5}
0000fe  2000              MOVS     r0,#0                 ;56
000100  4770              BX       lr
                          ENDP

